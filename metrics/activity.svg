<svg xmlns="http://www.w3.org/2000/svg" width="480" height="599" class="">
    <defs>
        <style/>
    </defs>
    <style>@keyframes animation-gauge{0%{stroke-dasharray:0 329}}@keyframes animation-rainbow{0%,to{color:#7f00ff;fill:#7f00ff}14%{color:#a933ff;fill:#a933ff}29%{color:#007fff;fill:#007fff}43%{color:#00ff7f;fill:#00ff7f}57%{color:#ff0;fill:#ff0}71%{color:#ff7f00;fill:#ff7f00}86%{color:red;fill:red}}svg{font-family:-apple-system,BlinkMacSystemFont,Segoe UI,Helvetica,Arial,sans-serif,Apple Color Emoji,Segoe UI Emoji;font-size:14px;color:#777}h2{margin:8px 0 2px;padding:0;color:#0366d6;font-weight:400;font-size:16px}h2 svg{fill:currentColor}section&gt;.field{margin-left:5px;margin-right:5px}.field{display:flex;align-items:center;margin-bottom:2px;white-space:nowrap}.field svg{margin:0 8px;fill:#959da5;flex-shrink:0}.field.error{color:#cb2431}.field.error svg{fill:#cb2431}.row{display:flex;flex-wrap:wrap}.row section{flex:1 1 0}#metrics-end,.fill-width{width:100%}.chartist .ct-post{fill:rgba(127,127,127,.8)!important;color:rgba(127,127,127,.8)!important;font-size:9px;text-anchor:middle}.activity{margin-bottom:12px}.activity .field{width:100%;overflow:hidden;text-overflow:ellipsis;max-width:450px;white-space:nowrap;margin-bottom:0}.activity .field .content{flex-grow:1;text-overflow:ellipsis;overflow:hidden}.activity .commit .sha,.activity .issue,.activity .repo{display:inline;color:#58a6ff}.activity .code,span.code{background-color:#7777771f;padding:1px 5px;font-size:80%;border-radius:6px;color:#777;font-family:SFMono-Regular,Consolas,Liberation Mono,Menlo,monospace;margin:0 4px -3px}.activity .details,.activity .timestamp{padding-left:38px;display:flex;flex-direction:column;font-size:13px;color:#666}.activity .timestamp{font-size:10px;margin-top:4px}.activity .commit{display:flex;align-items:center}.activity .commit .sha,code{font-family:SFMono-Regular,Consolas,Liberation Mono,Menlo,monospace}.activity .commit .sha{margin-right:4px}.activity .commit .message{overflow:hidden;text-overflow:ellipsis;width:360px;white-space:nowrap}.added{color:#3fb950}code{background-color:#7777771f;display:inline-block;border-radius:6px;color:#777;padding:1px 5px;font-size:80%}:root{--color-calendar-graph-day-bg:#ebedf0;--color-calendar-graph-day-border:rgba(27,31,35,0.06);--color-calendar-graph-day-L1-bg:#9be9a8;--color-calendar-graph-day-L2-bg:#40c463;--color-calendar-graph-day-L3-bg:#30a14e;--color-calendar-graph-day-L4-bg:#216e39;--color-calendar-halloween-graph-day-L1-bg:#ffee4a;--color-calendar-halloween-graph-day-L2-bg:#ffc501;--color-calendar-halloween-graph-day-L3-bg:#fe9600;--color-calendar-halloween-graph-day-L4-bg:#03001c;--color-calendar-graph-day-L4-border:rgba(27,31,35,0.06);--color-calendar-graph-day-L3-border:rgba(27,31,35,0.06);--color-calendar-graph-day-L2-border:rgba(27,31,35,0.06);--color-calendar-graph-day-L1-border:rgba(27,31,35,0.06)}</style>
    <style/>
    <foreignObject x="0" y="0" width="100%" height="100%">
        <div xmlns="http://www.w3.org/1999/xhtml" xmlns:xlink="http://www.w3.org/1999/xlink" class="items-wrapper">
            <section>
                <h2 class="field">
                    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" width="16" height="16">
                        <path fill-rule="evenodd" d="M0 8a8 8 0 1116 0v5.25a.75.75 0 01-1.5 0V8a6.5 6.5 0 10-13 0v5.25a.75.75 0 01-1.5 0V8zm5.5 4.25a.75.75 0 01.75-.75h3.5a.75.75 0 010 1.5h-3.5a.75.75 0 01-.75-.75zM3 6.75C3 5.784 3.784 5 4.75 5h6.5c.966 0 1.75.784 1.75 1.75v1.5A1.75 1.75 0 0111.25 10h-6.5A1.75 1.75 0 013 8.25v-1.5zm1.47-.53a.75.75 0 011.06 0l.97.97.97-.97a.75.75 0 011.06 0l.97.97.97-.97a.75.75 0 111.06 1.06l-1.5 1.5a.75.75 0 01-1.06 0L8 7.81l-.97.97a.75.75 0 01-1.06 0l-1.5-1.5a.75.75 0 010-1.06z"/>
                    </svg>
                    Recent activity
                </h2>
                <div class="row">
                    <section>
                        <div class="row fill-width">
                            <section class="activity">
                                <div class="field">
                                    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" width="16" height="16">
                                        <path fill-rule="evenodd" d="M10.5 7.75a2.5 2.5 0 11-5 0 2.5 2.5 0 015 0zm1.43.75a4.002 4.002 0 01-7.86 0H.75a.75.75 0 110-1.5h3.32a4.001 4.001 0 017.86 0h3.32a.75.75 0 110 1.5h-3.32z"/>
                                    </svg>
                                    <div class="content">
                                        Pushed 57 commits in
                                        <span class="repo">bytelink/bytelink</span>
                                    </div>
                                </div>
                                <div class="details">
                                    <div>on branch <span class="code">main</span></div>
                                    <div class="commit">
                                        <div class="sha">#595f33e</div>
                                        <div class="message">Store a pretocol version config var</div>
                                    </div>
                                    <div class="commit">
                                        <div class="sha">#7002d9a</div>
                                        <div class="message">Make server able to receive and respond to ping</div>
                                    </div>
                                    <div class="commit">
                                        <div class="sha">#847e3f3</div>
                                        <div class="message">Add basic client implementation</div>
                                    </div>
                                    <div class="commit">
                                        <div class="sha">#cc3e978</div>
                                        <div class="message">Remove ReadWriteCapable form packet class</div>
                                    </div>
                                    <div class="commit">
                                        <div class="sha">#8d8c9fd</div>
                                        <div class="message">Add basic server implementation</div>
                                    </div>
                                    <div class="commit">
                                        <div class="sha">#b550bef</div>
                                        <div class="message">Use read/write bytearrays instead of doing it manually</div>
                                    </div>
                                    <div class="commit">
                                        <div class="sha">#62dd4d4</div>
                                        <div class="message">Move the entire zerocom infrastructure to async</div>
                                    </div>
                                    <div class="commit">
                                        <div class="sha">#74ac49f</div>
                                        <div class="message">Mark serialize as abstractmethod</div>
                                    </div>
                                    <div class="commit">
                                        <div class="sha">#51dfd25</div>
                                        <div class="message">Add ping packets</div>
                                    </div>
                                    <div class="commit">
                                        <div class="sha">#bb3d181</div>
                                        <div class="message">Completely rework how packets will work</div>
                                    </div>
                                    <div class="commit">
                                        <div class="sha">#5e8d23e</div>
                                        <div class="message">Add remaining property to buffer</div>
                                    </div>
                                    <div class="commit">
                                        <div class="sha">#7e14786</div>
                                        <div class="message">Add a message packet</div>
                                    </div>
                                    <div class="commit">
                                        <div class="sha">#32d46f6</div>
                                        <div class="message">Add MalformedPacketError</div>
                                    </div>
                                    <div class="commit">
                                        <div class="sha">#d0ab5e0</div>
                                        <div class="message">Block initialization, not subclassing on missing PACKET_ID

The Packet class was originally using __init_subclass__, which is called
each time a child class is created. In there, we were performing a check
that ensures that this child class does define PACKET_ID class variable.

This does works, however it is against the nature of ABCs, since it
doesn't allow the class to be extendable through another abstract class,
it forces all subclasses to already have PACKET_ID, which is needed for
concrete subclasses, but not necessarily for abstract subclasses, hence
preventing more abstract subclasses to be made from this class.

Instead of that, this commit replaces __init_subclass__ with simple
check in __init__, as every subclass is expected to call the __init__ of
it's super class, triggering this PACKET_ID check with it. Since
__init__ only runs on initialization (making of an instance), not on
making of another class itself, it behaves much more like python's ABCs
are expected to, and allows extendability by other abstract classes.</div>
                                    </div>
                                    <div class="commit">
                                        <div class="sha">#4e36204</div>
                                        <div class="message">Allow passing `bytes` type into `write_bytearray`

While it may be slightly odd to use `bytes` instead of `bytearray` to be
passed into a function for writing bytearrays, however it actually makes
a lot of sense.

Type-wise, `bytearray` is actually a subtype of bytes, so bytearrays can
still be passed with the annotation being `bytes` type.

The reason using `bytes` makes more sense is because this type also
supports `__len__`, and can be sent over as an array of individual
bytes. There is therefore no reason to disallow this type, and it does
allow us to avoid needlessly casting/converting bytes to bytearrays.</div>
                                    </div>
                                    <div class="commit">
                                        <div class="sha">#52c7e5e</div>
                                        <div class="message">Add packet interractions functions</div>
                                    </div>
                                    <div class="commit">
                                        <div class="sha">#2f85640</div>
                                        <div class="message">Add base packet class</div>
                                    </div>
                                    <div class="commit">
                                        <div class="sha">#e43652d</div>
                                        <div class="message">Add base classes for read/write capable classes

These classes define a standardized interface across all classes which
should support being read (deserialized) or written (serialized) with
any BaseWriter/BaseReader.</div>
                                    </div>
                                    <div class="commit">
                                        <div class="sha">#7b7fae7</div>
                                        <div class="message">Remove repetition in base_io by using an Enum

The writer/reader classes were introducing a lot of repetition, which
was very likely to grow as more types would get added (read/write byte,
read/write short, read/write int, read/write long, ... and all that with
both signed and unsigned versions). These functions were explicitly
defined only because it was slightly more convenient and explicit
type-wise, but this wasn't a good solution for long-term.

Instead, this replaces explicit functions with a single function taking
in an enum value defining what struct type should be read/written. To
still provide type-checking, this new function includes overloads with
Unions of literal enum values common for ints/floats/etc. allowing easy
typing without too much repetition.

Because struct is doing most of our serailization/deserialization, it
has it's own error handling, which we catch and raise a ValueError with
the same message for consistency. This allows us to avoid things like
checking, meaning the whole enforce_decorator was removed.

This also changes varnums and renames write/read_varnum to
write/read_varuint, along with changing max size to use bits, which is
more explicit, and makes things slightly easier for us. The regular
write/read_varint is now also not using a static 32-bit (8-byte) size as
regular ints, but rather an arbitrarily sized number depending on passed
max_bits. Since this is a signed function which doesn't use a fixed
amount of bits, this also adds to_twos_complement and
from_twos_complement helper functions.

This is essentially almost a full rewrite of the base_io file, and
while this is a little less convenient solution (instead of
`writer.read_byte()` we now need `writer.read_value(StructFormat.BYTE)`,
I think it's worth it for how much repetition it avoids.</div>
                                    </div>
                                    <div class="commit">
                                        <div class="sha">#1dea73a</div>
                                        <div class="message">Rename protocol.abc to protocol.base_io

This rename is necessary as it prepares the file to be used for other
things than just abstract classes. These other uses should be present in
the same file, and will include major changes to the file, this commit
just prepares for that.</div>
                                    </div>
                                </div>
                                <div class="timestamp">4 Sept 2022, 08:28:39</div>
                            </section>
                        </div>
                        <div class="row fill-width">
                            <section class="activity">
                                <div class="field">
                                    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" width="16" height="16">
                                        <path fill-rule="evenodd" d="M7.177 3.073L9.573.677A.25.25 0 0110 .854v4.792a.25.25 0 01-.427.177L7.177 3.427a.25.25 0 010-.354zM3.75 2.5a.75.75 0 100 1.5.75.75 0 000-1.5zm-2.25.75a2.25 2.25 0 113 2.122v5.256a2.251 2.251 0 11-1.5 0V5.372A2.25 2.25 0 011.5 3.25zM11 2.5h-1V4h1a1 1 0 011 1v5.628a2.251 2.251 0 101.5 0V5A2.5 2.5 0 0011 2.5zm1 10.25a.75.75 0 111.5 0 .75.75 0 01-1.5 0zM3.75 12a.75.75 0 100 1.5.75.75 0 000-1.5z"/>
                                    </svg>
                                    <div class="content">
                                        Merged
                                        <span class="issue">#1 Rewrite</span>
                                    </div>
                                </div>
                                <div class="details">
                                    <div> in <span class="repo">bytelink/bytelink</span></div>
                                    <div>32 files changed <span class="code">++1610 --1140</span></div>
                                </div>
                                <div class="timestamp">4 Sept 2022, 08:28:39</div>
                            </section>
                        </div>
                        <div class="row fill-width">
                            <section class="activity">
                                <div class="field">
                                    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" width="16" height="16">
                                        <path fill-rule="evenodd" d="M10.5 7.75a2.5 2.5 0 11-5 0 2.5 2.5 0 015 0zm1.43.75a4.002 4.002 0 01-7.86 0H.75a.75.75 0 110-1.5h3.32a4.001 4.001 0 017.86 0h3.32a.75.75 0 110 1.5h-3.32z"/>
                                    </svg>
                                    <div class="content">
                                        Pushed 1 commit in
                                        <span class="repo">ItsDrike/ItsDrike</span>
                                    </div>
                                </div>
                                <div class="details">
                                    <div>on branch <span class="code">master</span></div>
                                    <div class="commit">
                                        <div class="sha">#df6f3ef</div>
                                        <div class="message">Updated with Dev Metrics</div>
                                    </div>
                                </div>
                                <div class="timestamp">4 Sept 2022, 02:29:55</div>
                            </section>
                        </div>
                    </section>
                </div>
            </section>
        </div>
        <div xmlns="http://www.w3.org/1999/xhtml" id="metrics-end"></div>
    </foreignObject>
</svg>