<svg xmlns="http://www.w3.org/2000/svg" width="480" height="354" class="">
    <defs>
        <style/>
    </defs>
    <style>@keyframes animation-gauge{0%{stroke-dasharray:0 329}}@keyframes animation-rainbow{0%,to{color:#7f00ff;fill:#7f00ff}14%{color:#a933ff;fill:#a933ff}29%{color:#007fff;fill:#007fff}43%{color:#00ff7f;fill:#00ff7f}57%{color:#ff0;fill:#ff0}71%{color:#ff7f00;fill:#ff7f00}86%{color:red;fill:red}}svg{font-family:-apple-system,BlinkMacSystemFont,Segoe UI,Helvetica,Arial,sans-serif,Apple Color Emoji,Segoe UI Emoji;font-size:14px;color:#777}h2{margin:8px 0 2px;padding:0;color:#0366d6;font-weight:400;font-size:16px}h2 svg{fill:currentColor}section&gt;.field{margin-left:5px;margin-right:5px}.field{display:flex;align-items:center;margin-bottom:2px;white-space:nowrap}.field svg{margin:0 8px;fill:#959da5;flex-shrink:0}.row{display:flex;flex-wrap:wrap}.row section{flex:1 1 0}#metrics-end,.fill-width{width:100%}.activity{margin-bottom:12px}.activity .field{width:100%;overflow:hidden;text-overflow:ellipsis;max-width:450px;white-space:nowrap;margin-bottom:0}.activity .field .content{flex-grow:1;text-overflow:ellipsis;overflow:hidden}.activity .issue,.activity .repo{display:inline;color:#58a6ff}.activity .code,code,span.code{background-color:#7777771f;border-radius:6px;color:#777;padding:1px 5px;font-size:80%;font-family:SFMono-Regular,Consolas,Liberation Mono,Menlo,monospace}.activity .code,span.code{margin:0 4px -3px}.activity .details,.activity .timestamp{padding-left:38px;display:flex;flex-direction:column;font-size:13px;color:#666}.activity .timestamp{font-size:10px;margin-top:4px}.activity .details&gt;.comment{overflow:hidden;text-overflow:ellipsis;display:block;width:420px;margin-top:6px;border-left:3px solid #777777b2;padding-left:6px;display:-webkit-box;-webkit-line-clamp:2;-webkit-box-orient:vertical}.people{padding:0 10px}code{display:inline-block}:root{--color-calendar-graph-day-bg:#ebedf0;--color-calendar-graph-day-border:rgba(27,31,35,0.06);--color-calendar-graph-day-L1-bg:#9be9a8;--color-calendar-graph-day-L2-bg:#40c463;--color-calendar-graph-day-L3-bg:#30a14e;--color-calendar-graph-day-L4-bg:#216e39;--color-calendar-halloween-graph-day-L1-bg:#ffee4a;--color-calendar-halloween-graph-day-L2-bg:#ffc501;--color-calendar-halloween-graph-day-L3-bg:#fe9600;--color-calendar-halloween-graph-day-L4-bg:#03001c;--color-calendar-winter-graph-day-L1-bg:#0a3069;--color-calendar-winter-graph-day-L2-bg:#0969da;--color-calendar-winter-graph-day-L3-bg:#54aeff;--color-calendar-winter-graph-day-L4-bg:#b6e3ff;--color-calendar-graph-day-L4-border:rgba(27,31,35,0.06);--color-calendar-graph-day-L3-border:rgba(27,31,35,0.06);--color-calendar-graph-day-L2-border:rgba(27,31,35,0.06);--color-calendar-graph-day-L1-border:rgba(27,31,35,0.06)}</style>
    <style/>
    <foreignObject x="0" y="0" width="100%" height="100%">
        <div xmlns="http://www.w3.org/1999/xhtml" xmlns:xlink="http://www.w3.org/1999/xlink" class="items-wrapper">
            <section>
                <h2 class="field">
                    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" width="16" height="16">
                        <path fill-rule="evenodd" d="M0 8a8 8 0 1116 0v5.25a.75.75 0 01-1.5 0V8a6.5 6.5 0 10-13 0v5.25a.75.75 0 01-1.5 0V8zm5.5 4.25a.75.75 0 01.75-.75h3.5a.75.75 0 010 1.5h-3.5a.75.75 0 01-.75-.75zM3 6.75C3 5.784 3.784 5 4.75 5h6.5c.966 0 1.75.784 1.75 1.75v1.5A1.75 1.75 0 0111.25 10h-6.5A1.75 1.75 0 013 8.25v-1.5zm1.47-.53a.75.75 0 011.06 0l.97.97.97-.97a.75.75 0 011.06 0l.97.97.97-.97a.75.75 0 111.06 1.06l-1.5 1.5a.75.75 0 01-1.06 0L8 7.81l-.97.97a.75.75 0 01-1.06 0l-1.5-1.5a.75.75 0 010-1.06z"/>
                    </svg>
                    Recent activity
                </h2>
                <div class="row">
                    <section>
                        <div class="row fill-width">
                            <section class="activity">
                                <div class="field">
                                    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" width="16" height="16">
                                        <path fill-rule="evenodd" d="M2.75 2.5a.25.25 0 00-.25.25v7.5c0 .138.112.25.25.25h2a.75.75 0 01.75.75v2.19l2.72-2.72a.75.75 0 01.53-.22h4.5a.25.25 0 00.25-.25v-7.5a.25.25 0 00-.25-.25H2.75zM1 2.75C1 1.784 1.784 1 2.75 1h10.5c.966 0 1.75.784 1.75 1.75v7.5A1.75 1.75 0 0113.25 12H9.06l-2.573 2.573A1.457 1.457 0 014 13.543V12H2.75A1.75 1.75 0 011 10.25v-7.5z"/>
                                    </svg>
                                    <div class="content">
                                        Commented on
                                        <span class="issue">#629 TimeoutError: timed out</span>
                                    </div>
                                </div>
                                <div class="details">
                                    <div>opened by LLIaMMaH in <span class="repo">py-mine/mcstatus</span></div>
                                    <div class="comment">
                                        Also, this discussion went pretty off topic from the original issue by now, github issues aren't really a great place for bikeshedding, they're here to report a bug, propose a feature, or ask questions about a single thing. Not to discuss the project as a whole. If you're interested in those kinds of discussions, consider visiting our discord instead: https://discord.gg/C2wX7zduxC
As for the original question/issue, as I've mentioned query timing out just means mcstatus wasn't able to make a connection to the server. This is likely due to a misconfiguration in your network, which ends up blocking UDP traffic. Try making the request directly from the same server where the minecraft server is running, and use a local IP in lookup. If this also doesn't work, make absolutely certain that you've saved the
                                        <code>server.properties</code>
                                        file with query enabled, and restarted the server afterwards. Also make sure that query-port is the same as the server port you're using for all TCP traffic.
If none of these suggestions worked for you, we'll need a minimal reproducable example. Since you're running a minecraft full server here, please provide us with the exact steps to recreate it, so that we can test this ourselves and figure out what's wrong. 
If you're using docker, this can just mean giving us the docker image, and all of the plugins that you're using. Otherwise, we'll need to know the operating system you're using, and have the exact instructions you've used from after installing this operating system to set up the minecraft server (and again a list of all plugins you've used).
I would suggest to first try and remove all plugins and see if it works then, if so, just keep adding plugins until it stops working, so you can figure out which plugin is causing the issue. If it doesn't it's the server distribution itself, which is odd, as it likely means it doesn't conform to the established minecraft protocol standard. In this case, we'll need the details I mentioned above.
                                    </div>
                                </div>
                                <div class="timestamp">10 Sept 2023, 20:45:50</div>
                            </section>
                        </div>
                        <div class="row fill-width">
                            <section class="activity">
                                <div class="field">
                                    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" width="16" height="16">
                                        <path fill-rule="evenodd" d="M2.75 2.5a.25.25 0 00-.25.25v7.5c0 .138.112.25.25.25h2a.75.75 0 01.75.75v2.19l2.72-2.72a.75.75 0 01.53-.22h4.5a.25.25 0 00.25-.25v-7.5a.25.25 0 00-.25-.25H2.75zM1 2.75C1 1.784 1.784 1 2.75 1h10.5c.966 0 1.75.784 1.75 1.75v7.5A1.75 1.75 0 0113.25 12H9.06l-2.573 2.573A1.457 1.457 0 014 13.543V12H2.75A1.75 1.75 0 011 10.25v-7.5z"/>
                                    </svg>
                                    <div class="content">
                                        Commented on
                                        <span class="issue">#629 TimeoutError: timed out</span>
                                    </div>
                                </div>
                                <div class="details">
                                    <div>opened by LLIaMMaH in <span class="repo">py-mine/mcstatus</span></div>
                                    <div class="comment">
                                        I don't understand what you mean by "pulling out a dictionary from the existing data". Like represent the data as a dictionary, rather than have it in the response classes? You can access
                                        <code>status.raw</code>
                                        which will give you a dictionary of the received data, exactly as it was received from the server.
However this data is unparsed, so for example the motd may be hard to work with in comparison to using
                                        <code>status.motd</code>
                                        , which gives you back an instance of the
                                        <code>Motd</code>
                                        class, that contains some neat logic allowing you to get various representations of the motd (such as pure text, ignoring any colors and formatting), minecraft formatting with the section/paragraph signs (like Â§a for green), and some other things.
                                    </div>
                                </div>
                                <div class="timestamp">10 Sept 2023, 20:30:08</div>
                            </section>
                        </div>
                        <div class="row fill-width">
                            <section class="activity">
                                <div class="field">
                                    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" width="16" height="16">
                                        <path fill-rule="evenodd" d="M2.75 2.5a.25.25 0 00-.25.25v7.5c0 .138.112.25.25.25h2a.75.75 0 01.75.75v2.19l2.72-2.72a.75.75 0 01.53-.22h4.5a.25.25 0 00.25-.25v-7.5a.25.25 0 00-.25-.25H2.75zM1 2.75C1 1.784 1.784 1 2.75 1h10.5c.966 0 1.75.784 1.75 1.75v7.5A1.75 1.75 0 0113.25 12H9.06l-2.573 2.573A1.457 1.457 0 014 13.543V12H2.75A1.75 1.75 0 011 10.25v-7.5z"/>
                                    </svg>
                                    <div class="content">
                                        Commented on
                                        <span class="issue">#629 TimeoutError: timed out</span>
                                    </div>
                                </div>
                                <div class="details">
                                    <div>opened by LLIaMMaH in <span class="repo">py-mine/mcstatus</span></div>
                                    <div class="comment">
                                        <i>
                                            After executing
                                            <code>status</code>
                                            or
                                            <code>query</code>
                                            , you can not go through the received data array yourself, but simply look at the counter and display a list if necessary.
                                        </i>
                                        So, what you're suggesting is a method that internally uses query and status, and you can just call it immediately? I don't think that's a good idea, since we'd be expected to provide functions like that for every little thing, i.e.
                                        <code>get_minecraft_version</code>
                                        ,
                                        <code>get_online_players</code>
                                        ,
                                        <code>get_player_slots_amount</code>
                                        , etc. Each one of these methods would call query or status internally, obtain all of the data at once, and then only give you access to one specific thing.
This would very likely lead people to call a bunch of these methods if they wanted various things, for example someone might want both version, slot amount and the player list. Calling all 3 methods would result in making the same request 3 times, each time we get all of the data, but we only give you one specific thing, and throw away the rest.
I think it's a good thing to allow people to see that by enabling query, you get all of these things at once, from a single request. How you use those things is then up to you, you can ignore the rest and only use the one thing you care about, but if you do care about a whole bunch of info on the server, you can get all of it at once.
This is both faster, and it impacts the server less. If someone made a program requesting 10 different things from a server, it would spam the server with a bunch of status request packets, all of which giving you the same data over and over. If you over do this, it might even yield to you getting banned by the server for suspected DoS (denial of service attack). You're simply making needless requests over and over again, and the server you're requesting this from will have to handle that.
I also don't think that it's particularly difficult to learn how mcstatus works, as we have a relatively simple to use public API for the library, and the response objects are all documented and type-hinted.
                                    </div>
                                </div>
                                <div class="timestamp">10 Sept 2023, 16:59:04</div>
                            </section>
                        </div>
                    </section>
                </div>
            </section>
        </div>
        <div xmlns="http://www.w3.org/1999/xhtml" id="metrics-end"></div>
    </foreignObject>
</svg>