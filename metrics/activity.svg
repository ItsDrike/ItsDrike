<svg xmlns="http://www.w3.org/2000/svg" width="480" height="329" class="">
    <defs>
        <style/>
    </defs>
    <style>@keyframes animation-gauge{0%{stroke-dasharray:0 329}}@keyframes animation-fade{0%{opacity:0}to{opacity:1}}@keyframes animation-rainbow{0%,to{color:#7f00ff;fill:#7f00ff}14%{color:#a933ff;fill:#a933ff}29%{color:#007fff;fill:#007fff}43%{color:#00ff7f;fill:#00ff7f}57%{color:#ff0;fill:#ff0}71%{color:#ff7f00;fill:#ff7f00}86%{color:red;fill:red}}svg{font-family:-apple-system,BlinkMacSystemFont,Segoe UI,Helvetica,Arial,sans-serif,Apple Color Emoji,Segoe UI Emoji;font-size:14px;color:#777}h2{margin:8px 0 2px;padding:0;color:#0366d6;font-weight:400;font-size:16px}h2 svg{fill:currentColor}section&gt;.field{margin-left:5px;margin-right:5px}.field{display:flex;align-items:center;margin-bottom:2px;white-space:nowrap}.field svg{margin:0 8px;fill:#959da5;flex-shrink:0}.row{display:flex;flex-wrap:wrap}.row section{flex:1 1 0}#metrics-end,.fill-width{width:100%}.stargazers .chartist .ct-post{fill:rgba(127,127,127,.8)!important;color:rgba(127,127,127,.8)!important;font-size:9px;text-anchor:middle}.activity{margin-bottom:12px}.activity .field{width:100%;overflow:hidden;text-overflow:ellipsis;max-width:450px;white-space:nowrap;margin-bottom:0}.activity .field .content{flex-grow:1;text-overflow:ellipsis;overflow:hidden}.activity .commit .sha,.activity .issue,.activity .repo{display:inline;color:#58a6ff}.activity .code,span.code{background-color:#7777771f;padding:1px 5px;font-size:80%;border-radius:6px;color:#777;font-family:SFMono-Regular,Consolas,Liberation Mono,Menlo,monospace;margin:0 4px -3px}.activity .details,.activity .timestamp{padding-left:38px;display:flex;flex-direction:column;font-size:13px;color:#666}.activity .timestamp{font-size:10px;margin-top:4px}.activity .commit{display:flex;align-items:center}.activity .commit .sha,code{font-family:SFMono-Regular,Consolas,Liberation Mono,Menlo,monospace}.activity .commit .sha{margin-right:4px}.activity .commit .message{overflow:hidden;text-overflow:ellipsis;width:360px;white-space:nowrap}.activity .details&gt;.comment{overflow:hidden;text-overflow:ellipsis;display:block;width:420px;margin-top:6px;border-left:3px solid#777777b2;padding-left:6px;display:-webkit-box;-webkit-line-clamp:2;-webkit-box-orient:vertical}code{background-color:#7777771f;display:inline-block;border-radius:6px;color:#777;padding:1px 5px;font-size:80%}code[class^=language-]{white-space:pre-wrap;width:97%;margin-top:4px}.token.comment{color:#690}.token.punctuation{color:#8a93a8}.token.keyword{color:#b44418}.token.number{color:#2777aa}.token.builtin,.token.operator{color:#106cbc}.token.trimmed{font-style:italic;color:#77777760}.space{margin-left:7px}:root{--color-calendar-graph-day-bg:#ebedf0;--color-calendar-graph-day-border:rgba(27,31,35,0.06);--color-calendar-graph-day-L1-bg:#9be9a8;--color-calendar-graph-day-L2-bg:#40c463;--color-calendar-graph-day-L3-bg:#30a14e;--color-calendar-graph-day-L4-bg:#216e39;--color-calendar-halloween-graph-day-L1-bg:#ffee4a;--color-calendar-halloween-graph-day-L2-bg:#ffc501;--color-calendar-halloween-graph-day-L3-bg:#fe9600;--color-calendar-halloween-graph-day-L4-bg:#03001c;--color-calendar-graph-day-L4-border:rgba(27,31,35,0.06);--color-calendar-graph-day-L3-border:rgba(27,31,35,0.06);--color-calendar-graph-day-L2-border:rgba(27,31,35,0.06);--color-calendar-graph-day-L1-border:rgba(27,31,35,0.06)}</style>
    <style/>
    <foreignObject x="0" y="0" width="100%" height="100%">
        <div xmlns="http://www.w3.org/1999/xhtml" xmlns:xlink="http://www.w3.org/1999/xlink" class="items-wrapper">
            <section>
                <h2 class="field">
                    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" width="16" height="16">
                        <path fill-rule="evenodd" d="M0 8a8 8 0 1116 0v5.25a.75.75 0 01-1.5 0V8a6.5 6.5 0 10-13 0v5.25a.75.75 0 01-1.5 0V8zm5.5 4.25a.75.75 0 01.75-.75h3.5a.75.75 0 010 1.5h-3.5a.75.75 0 01-.75-.75zM3 6.75C3 5.784 3.784 5 4.75 5h6.5c.966 0 1.75.784 1.75 1.75v1.5A1.75 1.75 0 0111.25 10h-6.5A1.75 1.75 0 013 8.25v-1.5zm1.47-.53a.75.75 0 011.06 0l.97.97.97-.97a.75.75 0 011.06 0l.97.97.97-.97a.75.75 0 111.06 1.06l-1.5 1.5a.75.75 0 01-1.06 0L8 7.81l-.97.97a.75.75 0 01-1.06 0l-1.5-1.5a.75.75 0 010-1.06z"/>
                    </svg>
                    Recent activity
                </h2>
                <div class="row">
                    <section>
                        <div class="row fill-width">
                            <section class="activity">
                                <div class="field">
                                    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" width="16" height="16">
                                        <path fill-rule="evenodd" d="M10.5 7.75a2.5 2.5 0 11-5 0 2.5 2.5 0 015 0zm1.43.75a4.002 4.002 0 01-7.86 0H.75a.75.75 0 110-1.5h3.32a4.001 4.001 0 017.86 0h3.32a.75.75 0 110 1.5h-3.32z"/>
                                    </svg>
                                    <div class="content">
                                        Pushed 1 commit in
                                        <span class="repo">ItsDrike/ItsDrike</span>
                                    </div>
                                </div>
                                <div class="details">
                                    <div>on branch <span class="code">master</span></div>
                                    <div class="commit">
                                        <div class="sha">#67b6871</div>
                                        <div class="message">Updated with Dev Metrics</div>
                                    </div>
                                </div>
                                <div class="timestamp">4 Feb 2022, 01:08:36</div>
                            </section>
                        </div>
                        <div class="row fill-width">
                            <section class="activity">
                                <div class="field">
                                    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" width="16" height="16">
                                        <path fill-rule="evenodd" d="M2.75 2.5a.25.25 0 00-.25.25v7.5c0 .138.112.25.25.25h2a.75.75 0 01.75.75v2.19l2.72-2.72a.75.75 0 01.53-.22h4.5a.25.25 0 00.25-.25v-7.5a.25.25 0 00-.25-.25H2.75zM1 2.75C1 1.784 1.784 1 2.75 1h10.5c.966 0 1.75.784 1.75 1.75v7.5A1.75 1.75 0 0113.25 12H9.06l-2.573 2.573A1.457 1.457 0 014 13.543V12H2.75A1.75 1.75 0 011 10.25v-7.5z"/>
                                    </svg>
                                    <div class="content">
                                        Commented on
                                        <span class="issue">#200 Raising errors on invalid ip requires rewrite of client logic</span>
                                    </div>
                                </div>
                                <div class="details">
                                    <div>opened by PerchunPak in <span class="repo">Dinnerbone/mcstatus</span></div>
                                    <div class="comment">
                                        <i>
                                            Okay, thanks. But the only reason I use mcstatus for DNS info, is because you already have the code I wanted to write to check SRV and other stuff.
Also, creating my own subclass means I'll have to check each time to see if anything in
                                            <code>__init__</code>
                                            has changed on update. I can of course automate this, but it doesn't seem like good practice.
                                        </i>
                                        Indeed, It's not, but again you shouldn't be storing the entire class just for DNS info, the only reason I suggested that, was to give you a solution that doesn't break your compatibility. The custom class is a lot better, but again, you shouldn't even be storing a class, just use a named tuple with host and port, or store them as attributes direcly in your class.
                                    </div>
                                </div>
                                <div class="timestamp">3 Feb 2022, 16:46:50</div>
                            </section>
                        </div>
                        <div class="row fill-width">
                            <section class="activity">
                                <div class="field">
                                    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" width="16" height="16">
                                        <path fill-rule="evenodd" d="M2.75 2.5a.25.25 0 00-.25.25v7.5c0 .138.112.25.25.25h2a.75.75 0 01.75.75v2.19l2.72-2.72a.75.75 0 01.53-.22h4.5a.25.25 0 00.25-.25v-7.5a.25.25 0 00-.25-.25H2.75zM1 2.75C1 1.784 1.784 1 2.75 1h10.5c.966 0 1.75.784 1.75 1.75v7.5A1.75 1.75 0 0113.25 12H9.06l-2.573 2.573A1.457 1.457 0 014 13.543V12H2.75A1.75 1.75 0 011 10.25v-7.5z"/>
                                    </svg>
                                    <div class="content">
                                        Commented on
                                        <span class="issue">#200 Raising errors on invalid ip requires rewrite of client logic</span>
                                    </div>
                                </div>
                                <div class="details">
                                    <div>opened by PerchunPak in <span class="repo">Dinnerbone/mcstatus</span></div>
                                    <div class="comment">
                                        I don't see how this is an issue with mcstatus though. I agree that separating DNS functions to make things like this easier is a good thing to do for cases like these, I personally don't think we should make the ip validation optional though since again, it just causes issues and we don't really have any good reason for doing that. If you need something like this on your side, why don't you just make a subclass, override our behavior and be done with it?
                                        <code class="language-multiline language-py" xml:space="preserve"><span class="token keyword">class</span> <span class="token class-name">MyMinecraftServer</span><span class="token punctuation">(</span>mcstatus<span class="token punctuation">.</span>MinecraftServer<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> host<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">,</span> port<span class="token punctuation">:</span> <span class="token builtin">int</span> <span class="token operator">=</span> <span class="token number">25565</span><span class="token punctuation">,</span> timeout<span class="token punctuation">:</span> <span class="token builtin">float</span> <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
<span class="token trimmed">(4 more lines were trimmed)</span></code>
                                        This way you get exactly the behavior you were looking for without any need to alter the library code, which requires this validation to be there. But it's up to you to debug any potential errors if they occur because the address was invalid in case you were using functions that require it. To circumvent that, you could implement any of the proposed solutions (bool flag with a function that blocks all other if false set by another function or running the check before each function making a connection), or something else if you can think of it. Though you don't really need it for your use-case, so it's up to you to implement those, just know that not doing that may cause issues.
What I'd actually suggest though is just not storing
                                        <code>MinecraftServer</code>
                                        class as "dns_info" parameter, that's not what this class is for at all, the
                                        <code>lookup</code>
                                        function does perform some DNS logic to get the port if it wasn't specified and there's an SRV record, however that's just the initial logic, you don't need the actual class for that, all you care about is really just the obtained host and port after this lookup.
This would mean you'd have to change your
                                        <code>ServerInfo</code>
                                        class and change everything that uses it, but that's not really an issue of mcstatus. You don't need to do that, you could just go with the custom class and it would allow to to keep everything as it was, but your original method wasn't great in the first place. What you could also do is making
                                        <code>MinecraftServer</code>
                                        -like class, except all it would do is store the
                                        <code>host</code>
                                        and
                                        <code>port</code>
                                        and contain the DNS lookup logic, perhaps with the use of PR 203 separated functions once it's merged. This would also allow you to preserve your original logic without that many changes. It's a bit weird to have a class just for dns info, but it would mean you wouldn't really need to change anything except maybe some typehints. (Unless you actually were using some other features of that class)
                                        <code class="language-multiline language-py" xml:space="preserve"><span class="token keyword">class</span> <span class="token class-name">DnsInfo</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> address<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
<span class="token trimmed">(11 more lines were trimmed)</span></code>
                                        What may actually be worth doing is making
                                        <code>lookup</code>
                                        -like staticmethod that just performs this logic but it only returns the host and port, instead of a full class instance, since even with the DNS logic now separated, it's still non-trivial to implement this and we could just call this from the original
                                        <code>cleanup</code>
                                        . I don't know how should a method like this be called, but it may be worth doing.
                                    </div>
                                </div>
                                <div class="timestamp">3 Feb 2022, 15:15:32</div>
                            </section>
                        </div>
                    </section>
                </div>
            </section>
        </div>
        <div xmlns="http://www.w3.org/1999/xhtml" id="metrics-end"></div>
    </foreignObject>
</svg>